{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","sortList","toBeSorted","employeesArray","sort","a","b","dataset","salary","substring","replaceAll","StartPoint","querySelector","forEach","arrayItem","append","getEmployees","list","employeesList","Array","from","map","person","name","lastChild","textContent","trim","position","age"],"mappings":";AAAA,aA+BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BA,IAAMA,EAAYC,SAASC,iBAAiB,MAE5C,SAASC,EAASC,GACVC,IAAAA,EAAiB,EAAID,GAAYE,KAAK,SAACC,EAAGC,GAC9CA,OAAAA,EAAEC,QAAQC,OAAOC,UAAU,GAAGC,WAAW,IAAK,IAC9CL,EAAEE,QAAQC,OAAOC,UAAU,GAAGC,WAAW,IAAK,MAE1CC,EAAaZ,SAASa,cAAc,MAE1CT,EAAeU,QAAQ,SAAAC,GAAaH,OAAAA,EAAWI,OAAOD,KAKxD,SAASE,EAAaC,GAUbC,OATeC,MAAMC,KAAKH,GAAMI,IAAI,SAACC,GACnC,MAAA,CACLC,KAAMD,EAAOE,UAAUC,YAAYC,OACnCC,SAAUL,EAAOf,QAAQoB,SACzBnB,OAAQc,EAAOf,QAAQC,OACvBoB,IAAKN,EAAOf,QAAQqB,OAR1B3B,EAASH,GAeTkB,EAAalB","file":"main.c157e553.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst employees = document.querySelectorAll('li');\n\nfunction sortList(toBeSorted) {\n  const employeesArray = [...toBeSorted].sort((a, b) =>\n    b.dataset.salary.substring(1).replaceAll(',', '')\n  - a.dataset.salary.substring(1).replaceAll(',', ''));\n\n  const StartPoint = document.querySelector('ul');\n\n  employeesArray.forEach(arrayItem => StartPoint.append(arrayItem));\n}\n\nsortList(employees);\n\nfunction getEmployees(list) {\n  const employeesList = Array.from(list).map((person) => {\n    return {\n      name: person.lastChild.textContent.trim(),\n      position: person.dataset.position,\n      salary: person.dataset.salary,\n      age: person.dataset.age,\n    };\n  });\n\n  return employeesList;\n}\n\ngetEmployees(employees);\n"]}